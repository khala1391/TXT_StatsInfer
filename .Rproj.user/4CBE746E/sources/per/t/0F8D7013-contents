# intro#1 ------------
# intro#1
q <- c(1,2,3,4,5,6)
sum(q)

w <- 3

w

mean(q)
sd(q)
summary(q)
hist(q)

# intro#2------------

# https://www.youtube.com/watch?v=rRqWCmETEKQ&list=PLAnhULIzAT3HCVkbMmvh_mUF2fQjvZ4zU&index=2



# ex4.3.2
# x  prob of event in interest
# n  no of experiment
# p  prob of success
# dbinom(x,n,p)

dbinom(3,15,0.2)  #P(X=x)  >>f
pbinom(3,15,0.2)  #P(X<=x) >>F (CDF)
s <- dbinom(0:3,15,0.2)
sum(s)

# 4.6.1 poisson

# dpois(x,mu)
# x prop
# mu average of distribution

dpois(5,3)  #P(X=x)
ppois(5,3)  #P(X<=x)

dpois(0:5,3)



# EX5.3.3
# pnorm(X,mu,sigma)  #P(X<=x)
# pnorn(X)   #P(Z<=x)


end <- pnorm(834,800,40)
from <- pnorm(778,800,40)

ans <- end-from
ans

# alternative
# P(Z<0.85)-P(Z<-0.55)
pnorm(0.85)-pnorm(-0.55)


# distribution
# dhyper
# phyper
# dgeom
# pgeom
# dchisq
# pchisq
# dt
# pt
# df
# pf


# note ---------

x <- c(2.5,3.7,6.4,11,3.0,0.3,1.9,4.2,5.5,3.2)
n <- length(x)
s <- sd(x)
(n-1)*s^2/qchisq(0.975,n-1)

(n-1)*s^2/qchisq(0.025,n-1)

# https://cran.rstudio.com/web/packages/TeachingDemos/TeachingDemos.pdf
library(TeachingDemos)
sigma.test(x, sigma=2,conf.level = 0.95)

# library_stat
# t.test
# z.test
# binom.test
# prop.test

phat <- 0.32
qhat <- 1-phat
phat + c(-1,1)*qnorm(0.975)*sqrt(phat*qhat/500)

pbinom(8,15,0.8)


# L1 combination ----


choose(4,2)

# L12 central limit theorem -------------
#L12

# problem 6.3.1
pnorm(2.22)-pnorm(1.11)

pnorm(-1.5)


# L13 confidence interval ----

bulb  <- sample(800:700,40)

mean(bulb)
sd(bulb)

# *****************************
# at CI =95%
rnorm(50)   # random 50 samples, normal distribution
qnorm(0.975)  # 1.959964    ~ x value for accumulate prob
pnorm(1.959964)  # 0.975   ~ accumulate prob (area)
dnorm(1.959964) #0.05844507   ~ density function at x 
# *****************************


mean(bulb) + c(-1,1)*1.96*(45)/sqrt(40)  # obtain UB,LB

# at various CI
mean(bulb) + c(-1,1)*qnorm(0.95)*(45)/sqrt(40)  #CI=90%
mean(bulb) + c(-1,1)*qnorm(0.975)*(45)/sqrt(40)  #CI=95%
mean(bulb) + c(-1,1)*qnorm(0.995)*(45)/sqrt(40)  #CI=99%



# L14 hypothesis test ----


# L15 stats inference:mean 1 pop ----


# L16 stats inference:variance  ----



# L17 hypothesis test, sampling proportion -------------
#L17
binom.test(x=18,n=20,p=0.7,alternative = "greater")

# return value on x-axis
qnorm(0.95) #CI=90%  
qnorm(0.975) #CI=95% 
qnorm(0.995) #CI=99%

# return  ~ CI
pnorm(1.644854) #CI=90% 
pnorm(1.959964) #CI=95% 
pnorm(2.575829) #CI=99% 


pnorm(qnorm(0.95))
qnorm(pnorm(1.644854))


rnorm(20)  #random point according to norm dis

# L18 exercise -------------
#L18
ex <- read.csv(file = file.choose())

head(ex)

head(ex$name)

summary(ex)
summary(ex$name)
summary(ex$dollar_price)
class(ex$local_price)
class(ex$dollar_price)
hist(ex$name)  #error his(class=numeric)
hist(ex$dollar_price)
hist(ex$USD)  #Case-sensitive
hist(ex$USD, col = "blue", main = "USD distribution",
     xlab = "USD", ylim = c(0,300),breaks = 20)

#mu = true mean of bigmac var
#H_0 : mu = 4
#H_1 : mu > 4

#real world >> do not know sigma2 pop >> use t-test

hist(ex$dollar_price,col = "blue", main = "dollar price",
     xlim = c(0,10), xlab = "dollar price", breaks = 100)
t.test(ex$dollar_price, mu = 3.3274, alternative = "greater")

#p.value = 0.04793
#reject H_0

t.test(ex$dollar_price, mu = 3.3274, alternative = "two.sided")

table(ex$dollar_price>6)
# true = 72 , false 1659

H_0 : p = 0.05
H_1 : p < 0.05
binom.test(x=72,n=length(ex$dollar_price),p=0.05, alternative = "less")


# L19 stats inference 2-sample mean: T-test -------------
#L19

# return area
# assume df = 23
df <- 23
qt(0.95,df) #CI=90%  
qt(0.975,df) #CI=95% 
qt(0.995,df) #CI=99%

# return CI
pt(1.644854,df) #CI=90% 
pt(1.959964,df) #CI=95% 
pt(2.575829,df) #CI=99% 


# L20 stats inference variance 2 pop -------------
# L20
x <- c(.43,.266,.567,.531,.702,.716,.612,.552,.486)
y <- c(.414,.236,.399,.412,.601,.607,.503,.487,.401)
alpha <-  0.02
nu =length(x)-1
difxy <- x-y
difxy

dbar <- mean(difxy) 
dbar

sd_t <- sd(t)
sd_t

talpha <- qt(1-(alpha/2),nu)
talpha

rang_mu_d <- dbar + c(-1,1)*talpha*sd_t/sqrt(length(t))
rang_mu_d


# ex8.3.3

a <- c(6.01,2.28,1.51,2.12)
b <- c(5.23,1.21,1.40,1.38)
alpha <-  0.01
CI <- 1-alpha
difab <- a-b
difab

# tcrit <- qt(0.99,3)
# tcrit

mu_d <- 0
t.test(difab,mu=mu_d,alternative = "greater",conf.level = CI)


# 	One Sample t-test
# 
# data:  difab
# t = 3.3387, df = 3, p-value = 0.02222  >>>> compared with alpha = 0.01
# alternative hypothesis: true mean is greater than 0
# 99 percent confidence interval:
#  -0.2430196        Inf
# sample estimates:
# mean of x 
#     0.675 


pokemon <- read.csv(file = file.choose())

head(pokemon)

mean(pokemon$attack)

t.test(pokemon$attack, mu= 75, alternative = "greater")

pokemon2 <- pokemon[pokemon$type1 =="grass",]
pokemon2
pokemon3 <- pokemon[pokemon$type1 =="water",]
pokemon3

# H0 : mu_grass - mu_water = 0
# H1 : mu_grass - mu_water not equal 0

t.test(pokemon2$attack, pokemon3$attack, mu=0, alternative = "two.sided" )  #default var.equal = FALSE

t.test(pokemon2$attack, pokemon3$attack, mu=0, alternative = "two.sided" ,var.equal = TRUE )
# diff23 = pokemon2$attack-pokemon3$attack
# t.test(diff23, mu=0, alternative = "two.sided" )
# > 
#   > diff23 = pokemon2$attack-pokemon3$attack

# Warning message:
#   In pokemon2$attack - pokemon3$attack :
#   longer object length is not a multiple of shorter object length
# > t.test(diff23, mu=0, alternative = "two.sided" )


qf(0.95,2,3)

